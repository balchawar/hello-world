version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 020824114675.dkr.ecr.eu-west-1.amazonaws.com
      - REPOSITORY_URI=553346259689.dkr.ecr.eu-west-1.amazonaws.com/testj
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - AWS_REPO_NAME=testj
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"testj","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      # - printf 'Restarting ECS Service'
      # - # Update ECS Service
      # - aws ecs update-service --cluster GetFee-Invoice-Production --service getroom-prod-reservation --region $AWS_DEFAULT_REGION --force-new-deployment

      # - printf 'Searching for untagged images'
      # # Delete Untagged images
      # - IMAGES_TO_DELETE=$( aws ecr list-images --region $AWS_DEFAULT_REGION --repository-name $AWS_REPO_NAME --filter "tagStatus=UNTAGGED" --query 'imageIds[*]' --output json )
      
      # - printf 'Deleting untagged images'
      # - aws ecr batch-delete-image --region $AWS_DEFAULT_REGION --repository-name $AWS_REPO_NAME --image-ids "$IMAGES_TO_DELETE" || true

artifacts:
    files: imagedefinitions.json
